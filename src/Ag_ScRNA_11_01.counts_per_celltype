###############
source("src/00_init.R")
library(data.table)


inDir<-dirout("/ScRNA_08_Pseudobulk_limma")
enrichment_per_ko<-"Ag_ScRNA_09_enrichment_per_ko/"

out<-dirout("Ag_ScRNA_09_Pseudobulk_limma_all_ko/")

########################
#load data
########################
#meta
meta<-read.delim(inDir("metadata.tsv"),row.names=1)

meta<-meta[meta$celltype!="B-cell" & meta$celltype!="CLP" & meta$celltype!="Ery" & meta$celltype!="EBMP" & meta$celltype!="unclear",]
meta<-meta[meta$genotype %in% meta[meta$tissue=="ex.vivo",]$genotype,]

#change rownames to match column names of expression data
rownames(meta)<-gsub("Eo/Ba","Eo.Ba",rownames(meta))
meta$cell<-gsub("Eo/Ba","Eo.Ba",meta$cell)
meta$celltype<-gsub("Eo/Ba","Eo.Ba",meta$celltype)
meta<-meta%>%filter(!grepl("NA",rownames(meta)))
rownames(meta)<-gsub(" ",".",rownames(meta))
rownames(meta)<-gsub("\\(",".",rownames(meta))
rownames(meta)<-gsub("\\)",".",rownames(meta))
rownames(meta)<-gsub("-",".",rownames(meta))
##############
#factors and levels

meta$genotype <- factor(meta$genotype, levels=c("NTC", unique(setdiff(meta$genotype,"NTC"))))
meta$tissue <- factor(meta$tissue, levels=c("in.vivo", "ex.vivo"))
#counts
counts <- read.delim(inDir("combined_in_ex_counts.tsv"), row.names = 1)

counts<-counts[,rownames(meta)]
stopifnot(all(colnames(counts)==rownames(meta)))

##################
#number per celltype for each tissue
##################
gene<-"x"
tis<-"ex.vivo"
i<-"Mono."
number<-data.table()
meta<-na.omit(meta)
for (tis in unique(meta$tissue)){
  for (gene in unique(meta$genotype)){
    for(i in unique(meta$celltype)){
      number<-rbind(number,data.table(
        genotype=gene,
        tissue=tis,
        celltype=i,
        sample=nrow(subset(meta,genotype==gene & tissue==tis & celltype==i))))
    }
  }
}

number<-number[genotype%in%unique(meta[tissue=="ex.vivo",]$genotype),]

ggplot(number,aes(x=genotype,y=sample))+
  geom_col()+
  facet_grid(rows = vars(number$tissue),cols = vars(number$celltype))+
  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))
write.tsv(number,out("celltypes_numbers.tsv"))