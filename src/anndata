


# GFS points to where the data is stored and results will be written to
if(dir.exists("/vscratch/aarathy")){
  print("Setting aarathy within singularity to /vscratch/aarathy")
  Sys.setenv(aarathy=" /vscratch/aarathy")
}
dirout <- function(out, ext="", init=TRUE){
  out.dir <- paste0("/vscratch/aarathy/", "/", out, "/")
  if(init){
    dir.create(out.dir,showWarnings=FALSE); 
    message("Setting output directory: ", out.dir)
  }
  function(...){
    paste0(out.dir, paste0(...), ext)
  }
}
source("src/Ag_Optimized_theme_fig.R")
# Load your Monocle object
library(zellkonverter)
library(SingleCellExperiment)
library(monocle3)
library(Seurat)
library(SeuratDisk)
basedir = "/media/AGFORTELNY/PROJECTS/TfCf_AG/Analysis/Ag_ScRNA_08_Pseudobulk_limma_guide/"
outdir = dirout("Analysis/anndata")
# Load your Monocle object


# Load Monocle objects
monocle_obj_ex <- readRDS(paste0(basedir,"exvivo_monocle_proj.rds"))
monocle_obj_in <- readRDS(paste0(basedir,"invivo_monocle_proj.rds"))
# Load the Monocle objects
# Ensure the genes match between the two objects
common_genes <- intersect(rownames(monocle_obj_ex), rownames(monocle_obj_in))

# Subset the expression data to match the common genes
monocle_obj_ex <- monocle_obj_ex[common_genes, ]
monocle_obj_in <- monocle_obj_in[common_genes, ]

# Concatenate the expression matrices from both Monocle objects
combined_expression_data <- cbind(
  assay(monocle_obj_ex),  # Expression data from exvivo
  assay(monocle_obj_in)   # Expression data from invivo
)

# Concatenate the cell metadata and add suffixes to differentiate them
colData(monocle_obj_ex)$dataset <- "exvivo"  # Add a dataset column for exvivo
colData(monocle_obj_in)$dataset <- "invivo"  # Add a dataset column for invivo

# Combine cell metadata
combined_cell_data <- rbind(colData(monocle_obj_ex), colData(monocle_obj_in))

# Combine the two objects into a single Monocle object
combined_monocle_obj <- new_cell_data_set(
  expression_data = combined_expression_data,
  cell_metadata = combined_cell_data,
  gene_metadata = rowData(monocle_obj_ex)  # Assuming gene metadata is the same
)


# Convert the combined Monocle object to a Seurat object
seurat_obj <- CreateSeuratObject(
  counts = combined_expression_data, 
  meta.data = combined_cell_data
)
combined_cell_data <- as.data.frame(combined_cell_data)
# Create the Seurat object from the combined data
seurat_obj <- CreateSeuratObject(
  counts = combined_expression_data, 
  meta.data = combined_cell_data
)



# Save Seurat object as .h5Seurat file
SaveH5Seurat(seurat_obj, filename = outdir("combined_monocle_seurat.h5Seurat"))

Convert(outdir("combined_monocle_seurat.h5Seurat"), dest = "h5ad")
