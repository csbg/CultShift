
source("src/00_init.R")
#library("tidyverse")
#####################
out <- dirout("/AG_01_test")
inDir1<- dirout_load("/SCRNA_10_collect_UMAPs")
inDir <- dirout_load("SCRNA_02_01_Integration")

# load Monocle Objects

mobjs <- list()
tissue<-c("ex.vivo","in.vivo")
for(tissuex in tissue){
  (load(PATHS$SCRNA$MONOCLE.DIR(tissuex)))
  mobjs[[tissuex]] <- monocle.obj
}
tissue_n<- names(mobjs)
tissues<-mobjs[tissue_n]

#############

annotations<- readRDS(inDir1("ProjMonocle_celltypes.RDS"))

head(annotations)
annot<-annotations[rn %in% colnames(tissues$ex.vivo)][,c("rn","functional.cluster")]
colnames(annot)<-c("rn","celltype")

#add cell type to colData
tissues$ex.vivo@colData["rn"]<-rownames(tissues$ex.vivo@colData)
tissues$ex.vivo <- tissues$ex.vivo[,annot$rn]
stopifnot(all(annot$rn == colnames(tissues$ex.vivo)))
tissues$ex.vivo@colData["celltype"] <- annot$celltype
head(tissues$ex.vivo@colData)
# create genotype column
tissues$ex.vivo@colData["genotype"]<-gsub("_.+$","",tissues$ex.vivo@colData$guide)
head(tissues$ex.vivo@colData)

# split metadata based on celltype, genotype and sample
# also split due to sample because when doing DE analysis, otherwise you only get one sample per condition.

mat_gt_ct<-with(tissues$ex.vivo@colData, split(rn, paste(genotype,celltype, orig.ident)))

sort(sapply(mat_gt_ct, length))
# sapply here applies the function rowsums to the given list of vectors-mat_gt_ct. 
#Each of the elements in mat_gt_ct is a vector specifying the sample names in that group. 
# Using sapply, the function rowsums is applied to the counts matrix of 
#the exvivo with those selected columns.

test<- sapply(mat_gt_ct, function(bcs) Matrix::rowSums(counts(tissues$ex.vivo)[,bcs,drop=F]))

head(test)
names(mat_gt_ct)
tt<-as.data.table(gsub("\\s+$","",names(mat_gt_ct)))
tt1<-as.data.table(tissues$ex.vivo@colData)
head(tt1)
head(mat_gt_ct)

meta<-function(x){for (i in )
  
}
